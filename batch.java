/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author ANAGHA
 */

public class batch extends javax.swing.JFrame {

    /**
     * Creates new form batch
     */
       // Declare ResultSet as a class variable


// ...

// In your constructor or initialization method
                      
    public batch() {
        initComponents();
        setDefaultCloseOperation(batch.DISPOSE_ON_CLOSE);
      try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/miniproject","root","123456");
           Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
           

             rs=stmt.executeQuery("select * from batch; ");
            if(rs.next())
            {
                  t1.setText(String.valueOf(rs.getInt(1)));
                 t2.setText(String.valueOf(rs.getInt(2)));
                 t3.setText(String.valueOf(rs.getInt(3)));
                  t4.setText(rs.getString(4));
        }
                        
            }
            catch(Exception e)  {
               
                System.out.println(e);
            }  

// TODO add your handling code here:
                                   
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        next1 = new javax.swing.JButton();
        next3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        fetch = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        t3 = new javax.swing.JTextField();
        t1 = new javax.swing.JTextField();
        t2 = new javax.swing.JTextField();
        t4 = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        add = new javax.swing.JButton();
        previous = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        next = new javax.swing.JButton();
        LAST = new javax.swing.JButton();
        FIRST = new javax.swing.JButton();
        clear = new javax.swing.JButton();

        next1.setBackground(new java.awt.Color(255, 204, 255));
        next1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        next1.setText("NEXT");
        next1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next1ActionPerformed(evt);
            }
        });

        next3.setBackground(new java.awt.Color(255, 204, 255));
        next3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        next3.setText("NEXT");
        next3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next3ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BATCH_ID", "YEAR", "NUMSTU", "STATUS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        fetch.setBackground(new java.awt.Color(255, 204, 255));
        fetch.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        fetch.setText("FETCH");
        fetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(255, 204, 255));
        back.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 204, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 204, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("BATCH_ID");

        jLabel2.setBackground(new java.awt.Color(255, 204, 255));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("NUMSTU");

        jLabel3.setBackground(new java.awt.Color(255, 204, 255));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("STATUS");

        jLabel4.setBackground(new java.awt.Color(255, 204, 255));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("YEAR");

        update.setBackground(new java.awt.Color(255, 204, 255));
        update.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(255, 204, 255));
        add.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        previous.setBackground(new java.awt.Color(255, 204, 255));
        previous.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        previous.setText("PREVIOUS");
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });

        remove.setBackground(new java.awt.Color(255, 204, 255));
        remove.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        remove.setText("REMOVE");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        next.setBackground(new java.awt.Color(255, 204, 255));
        next.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        next.setText("NEXT");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        LAST.setBackground(new java.awt.Color(255, 204, 255));
        LAST.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        LAST.setText("LAST");
        LAST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LASTActionPerformed(evt);
            }
        });

        FIRST.setBackground(new java.awt.Color(255, 204, 255));
        FIRST.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        FIRST.setText("FIRST");
        FIRST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FIRSTActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(255, 204, 255));
        clear.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(t3, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(t1)
                            .addComponent(t2)
                            .addComponent(t4)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(update)
                            .addComponent(fetch))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clear)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FIRST, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(previous)
                            .addComponent(remove)
                            .addComponent(LAST))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fetch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(remove, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(previous, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LAST, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FIRST, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchActionPerformed
   DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
   /*String url="jdbc:mysql://localhost:3306/miniproject";
    String user="root";
    String pwd="123456";
    String query ="select* from miniproject";*/
    /*var batch_id =batchname.getText();*/
     try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/miniproject","root","123456");
            Statement stmt=con.createStatement();
       
            ResultSet rs=stmt.executeQuery("select * from batch; ");
            while(rs.next())
            {
                int batchid=rs.getInt("batch_id");
                int year=rs.getInt("year");
                int stud=rs.getInt("numstu");
                String status=rs.getString("status");
                model.addRow(new Object[] {batchid,year,stud,status});
                
            }
            rs.close();
            stmt.close();
            
            
            }
            catch(Exception e)  {
                JOptionPane.showMessageDialog(this, e.getMessage());
                
            }  

// TODO add your handling code here:
    }//GEN-LAST:event_fetchActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed

this.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
 DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
 TableRowSorter<DefaultTableModel> obj1=new TableRowSorter<>(model);
 jTable1.setRowSorter(obj1);
 obj1.setRowFilter(RowFilter.regexFilter(jTextField1.getText()));
 

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyReleased

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
 String query = "UPDATE batch SET year = ?, numstu = ?, status = ? WHERE batch_id = ?";
    
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/miniproject", "root", "123456");

        // Assuming t1, t2, t3, and t4 are your JTextFields or similar components
        int batchid = Integer.parseInt(t1.getText());
        int year = Integer.parseInt(t2.getText());
        int stud = Integer.parseInt(t3.getText());
        String status = t4.getText();

        PreparedStatement stm = con.prepareStatement(query);
        stm.setInt(1, year);
        stm.setInt(2, stud);
        stm.setString(3, status);
        stm.setInt(4, batchid);

        int rowsAffected = stm.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Batch updated successfully");
        } else {
            JOptionPane.showMessageDialog(this, "No batch found with the given batch_id");
        }

        // Clear text fields
        t1.setText(null);
        t2.setText(null);
        t3.setText(null);
        t4.setText(null);

        // Close the connection
        con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    } 

        // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
    
   /*String url="jdbc:mysql://localhost:3306/miniproject";
    String user="root";
    String pwd="123456";*/
    String query = "insert into batch values(?,?,?,?)";
int batchid = Integer.parseInt(t1.getText());
int year = Integer.parseInt(t2.getText());
int stud = Integer.parseInt(t3.getText());
String status = t4.getText();

/*String checkquery = "update batch set batch_id=batch_id+" + batchid + " where year='" + year + "' and numstu='" + stud + "' and status='" + status + "'";
*/
try {
    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/miniproject", "root", "123456");
    Statement stmt = con.createStatement();
    /*int rows = stmt.executeUpdate(checkquery);

    if (rows > 0) {
        JOptionPane.showMessageDialog(this, "This batch already exists");
    } else {
       */
        PreparedStatement stm = con.prepareStatement(query);
        stm.setInt(1, batchid);
        stm.setInt(2, year);
        stm.setInt(3, stud);
        stm.setString(4, status);
        stm.execute();
JOptionPane.showMessageDialog(this, "added the batch");
        
    

    t1.setText(null);
    t2.setText(null);
    t3.setText(null);
    t4.setText(null);

    
}
catch (Exception e) {
    JOptionPane.showMessageDialog(this, e.getMessage());
}


        // TODO add your handling code here:
    }//GEN-LAST:event_addActionPerformed

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
try {
        if (rs != null && rs.previous()) {
            t1.setText(String.valueOf(rs.getInt(1)));
            t2.setText(String.valueOf(rs.getInt(2)));
            t3.setText(String.valueOf(rs.getInt(3)));
            t4.setText(rs.getString(4));
        } else {
            JOptionPane.showMessageDialog(this, "ResultSet is either null or at the first row.");
        }
    } catch (SQLException ex) {
        Logger.getLogger(batch.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error navigating ResultSet: " + ex.getMessage());
    }




        // TODO add your handling code here:
    }//GEN-LAST:event_previousActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed

       String query = "delete from batch where batch_id=? ";



/*String checkquery = "update batch set batch_id=batch_id+" + batchid + " where year='" + year + "' and numstu='" + stud + "' and status='" + status + "'";
*/
 try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/miniproject", "root", "123456");

        // Assuming t1 is your JTextField or similar component containing batch_id
        int batchid = Integer.parseInt(t1.getText());

        PreparedStatement stm = con.prepareStatement(query);
        stm.setInt(1, batchid);

        int rowsAffected = stm.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Batch removed successfully");
        } else {
            JOptionPane.showMessageDialog(this, "No batch found with the given batch_id");
        }

        // Clear text field
        t1.setText(null);

        // Close the connection
        con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    } 






        // TODO add your handling code here:
    }//GEN-LAST:event_removeActionPerformed
private ResultSet rs;
    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
 try {
        if (rs != null && rs.last()) {
            t1.setText(String.valueOf(rs.getInt(1)));
            t2.setText(String.valueOf(rs.getInt(2)));
            t3.setText(String.valueOf(rs.getInt(3)));
            t4.setText(rs.getString(4));
        } else {
            JOptionPane.showMessageDialog(this, "ResultSet is either null or empty.");
        }
    } catch (SQLException ex) {
        Logger.getLogger(batch.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error navigating ResultSet: " + ex.getMessage());
    }







        // TODO add your handling code here:
    }//GEN-LAST:event_nextActionPerformed

    private void next1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_next1ActionPerformed

    private void LASTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LASTActionPerformed
      try {
        if (rs != null) {
            rs.last();
            t1.setText(String.valueOf(rs.getInt(1)));
            t2.setText(String.valueOf(rs.getInt(2)));
            t3.setText(String.valueOf(rs.getInt(3)));
            t4.setText(rs.getString(4));
        } else {
            JOptionPane.showMessageDialog(this, "ResultSet is not initialized");
        }
    } catch (SQLException ex) {
        Logger.getLogger(batch.class.getName()).log(Level.SEVERE, null, ex);
    }


    }//GEN-LAST:event_LASTActionPerformed

    private void next3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_next3ActionPerformed

    private void FIRSTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FIRSTActionPerformed
        try {
        if (rs != null && rs.first()) {
            t1.setText(String.valueOf(rs.getInt(1)));
            t2.setText(String.valueOf(rs.getInt(2)));
            t3.setText(String.valueOf(rs.getInt(3)));
            t4.setText(rs.getString(4));
        } else {
            JOptionPane.showMessageDialog(this, "ResultSet is either null or at the first row.");
        }
    } catch (SQLException ex) {
        Logger.getLogger(batch.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error navigating ResultSet: " + ex.getMessage());
    }

    }//GEN-LAST:event_FIRSTActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
 t1.setText("");
  t2.setText("");
  t3.setText("");
  t4.setText("");
  



        // TODO add your handling code here:
    }//GEN-LAST:event_clearActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(batch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(batch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(batch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(batch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new batch().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FIRST;
    private javax.swing.JButton LAST;
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JButton clear;
    private javax.swing.JButton fetch;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton next;
    private javax.swing.JButton next1;
    private javax.swing.JButton next3;
    private javax.swing.JButton previous;
    private javax.swing.JButton remove;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JTextField t3;
    private javax.swing.JTextField t4;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
